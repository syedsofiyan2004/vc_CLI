# .github/workflows/ci-cd.yml
name: Build & Deploy Docker Images → ECR → ECS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION:       ap-south-1
  AWS_ACCOUNT_ID:   030230817033              # ← your account
  CLUSTER:          sofiyan-cluster
  API_SERVICE:      api-service                # ECS Service name
  PROXY_SERVICE:    proxy-service              # ECS Service name

jobs:
  ecr-login:
    name: Authenticate to ECR
    runs-on: ubuntu-latest
    outputs:
      login-password: ${{ steps.login.outputs.password }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Get ECR login password
        id: login
        run: |
          echo "::set-output name=password::$(aws ecr get-login-password \
            --region $AWS_REGION)"

  build-and-push:
    name: Build & Push Docker Images
    needs: ecr-login
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: container-server
            path: Container-server
          - name: api-server
            path: Api-server
          - name: s3-reverse-proxy
            path: S3-reverse-proxy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Amazon ECR
        run: |
          echo ${{ needs.ecr-login.outputs.password }} \
            | docker login \
                --username AWS \
                --password-stdin \
                ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "${{ matrix.service.name }}" \
            || aws ecr create-repository --repository-name "${{ matrix.service.name }}"

      - name: Build & push ${{ matrix.service.name }} image
        uses: docker/build-push-action@v4
        with:
          context:     ${{ matrix.service.path }}
          file:        ${{ matrix.service.path }}/Dockerfile
          push:        true
          tags:        |
            ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ matrix.service.name }}:latest

  update-ecs-services:
    name: Trigger ECS rolling updates
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Force new deployment for API service
        run: |
          aws ecs update-service \
            --cluster $CLUSTER \
            --service $API_SERVICE \
            --force-new-deployment

      - name: Force new deployment for Proxy service
        run: |
          aws ecs update-service \
            --cluster $CLUSTER \
            --service $PROXY_SERVICE \
            --force-new-deployment
